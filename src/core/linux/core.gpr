
with "switches";
with "gneiss";
with "gneiss_protocol";
with "basalt";
with "SXML";

project Core is

   Gneiss_Root := external ("GNEISS_ROOT", ".");
   Step := external ("CEMENT_BUILD_STEP");

   case Step is
      when "compile" =>
         for Create_Missing_Dirs use "True";
         for Source_Dirs use (Gneiss_Root & "/src/core/linux");
         for Languages use ("Ada");
         for Object_Dir use external ("CEMENT_OBJECT_DIR");
         for Main use ("main.adb");
         for Runtime ("Ada") use Gneiss_Root & "/ada-runtime/build/posix/obj";
      when others =>
         for Languages use ();
   end case;

   package Builder is
      case Step is
         when "compile" =>
            for Global_Configuration_Pragmas use Gneiss_Root & "/spark.adc";
            for Executable ("main.adb") use "core";
         when others =>
            null;
      end case;
   end Builder;

   package Compiler is
      for Default_Switches ("Ada") use Switches.Compiler_Switches;
   end Compiler;

   package Linker is
      for Required_Switches use ("-lpthread", "-lrt", "-ldl");
   end Linker;

end Core;
